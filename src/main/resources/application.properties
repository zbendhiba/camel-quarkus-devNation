## set the environment variable TELEGRAM_AUTHORIZATION_TOKEN with your Telegram bot Authorization Token
telegram-token-api=${TELEGRAM_AUTHORIZATION_TOKEN}

#Messages for telegram bot producer
devNation.bot.start=Bienvenue √† *#DevNation Day France*.\n\nRavie de t'avoir parmi nous pour mon talk Int√©gration avec #ApacheCamel üê™ et #QuarkusIO.\n\n*Les liens:*\n-[mes slides](https://drive.google.com/file/d/1cGc4RU-RDrPm9ierixeYgCvJqFcfdsoE/view?usp=sharing)\n-[le code source](https://github.com/zbendhiba/camel-quarkus-devNation)\n\nPour me laisser un message, commence ton message par  *#msg*.
devNation.bot.msg=Merci pour ton retour.
devNation.bot.otherwise=D√©sol√©e, je n'ai pas compris. Tu peux utiliser /start ou #msg

#Kafka prod credentials
%prod.camel.component.kafka.brokers=${KAFKA_BOOSTRAP_URL}

quarkus.hibernate-orm.database.generation=create
#postgresql prod credentials
%prod.quarkus.datasource.db-kind=postgresql 
%prod.quarkus.datasource.username=${POSTGRESQL_USER}
%prod.quarkus.datasource.password=${POSTGRESQL_PASSWORD}
%prod.quarkus.datasource.jdbc.url=${POSTGRESQL_JDBC_URL}
%prod.quarkus.datasource.jdbc.max-size=16


# OpenShift install
quarkus.openshift.image-pull-policy=IfNotPresent

#uncomment to set container build
quarkus.container-image.builder=docker
quarkus.kubernetes.deployment-target=kubernetes
quarkus.container-image.push=true
quarkus.container-image.group=<YOUR_IMAGE_GROUP>

#log config
quarkus.log.category."org.apache.camel.quarkus.core.deployment".level = INFO
quarkus.log.category."org.apache.camel.quarkus.component.kafka".level = DEBUG
quarkus.log.category."org.apache.zookeeper".level = WARNING
quarkus.log.category."org.apache.kafka".level = WARNING

%quiet.quarkus.log.category."kafka".level = WARNING
%quiet.quarkus.log.category."kafka.log".level = FATAL


